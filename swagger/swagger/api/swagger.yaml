openapi: 3.0.2
info:
  title: ZAP API
  description: The HTTP API for controlling and accessing ZAP.
  contact:
    name: OWASP ZAP User Group
    url: https://groups.google.com/group/zaproxy-users
    email: zaproxy-users@googlegroups.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: Dev Build
servers:
- url: http://zap
  description: The URL while proxying through ZAP.
- url: http://{address}:{port}
  description: The URL of a Local Proxy of ZAP.
  variables:
    address:
      description: The address ZAP is listening on.
      default: 127.0.0.1
    port:
      description: The port ZAP is bound to.
      default: "8080"
security:
- apiKeyHeader: []
- apiKeyQuery: []
paths:
  /JSON/alert/view/alert/:
    get:
      tags:
      - alert
      description: Gets the alert with the given ID, the corresponding HTTP message
        can be obtained with the 'messageId' field and 'message' API method
      operationId: alertViewAlert
      parameters:
      - name: id
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/alert/view/alerts/:
    get:
      tags:
      - alert
      description: Gets the alerts raised by ZAP, optionally filtering by URL or riskId,
        and paginating with 'start' position and 'count' of alerts
      operationId: alertViewAlerts
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: riskId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/alert/view/alertsSummary/:
    get:
      tags:
      - alert
      description: Gets number of alerts grouped by each risk level, optionally filtering
        by URL
      operationId: alertViewAlertsSummary
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/alert/view/numberOfAlerts/:
    get:
      tags:
      - alert
      description: Gets the number of alerts, optionally filtering by URL or riskId
      operationId: alertViewNumberOfAlerts
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: riskId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/alert/view/alertsByRisk/:
    get:
      tags:
      - alert
      description: Gets a summary of the alerts, optionally filtered by a 'url'. If
        'recurse' is true then all alerts that apply to urls that start with the specified
        'url' will be returned, otherwise only those on exactly the same 'url' (ignoring
        url parameters)
      operationId: alertViewAlertsByRisk
      parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: recurse
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/alert/view/alertCountsByRisk/:
    get:
      tags:
      - alert
      description: Gets a count of the alerts, optionally filtered as per alertsPerRisk
      operationId: alertViewAlertCountsByRisk
      parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: recurse
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/alert/action/deleteAllAlerts/:
    get:
      tags:
      - alert
      description: Deletes all alerts of the current session.
      operationId: alertActionDeleteAllAlerts
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/alert/action/deleteAlert/:
    get:
      tags:
      - alert
      description: Deletes the alert with the given ID.
      operationId: alertActionDeleteAlert
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/acsrf/view/optionTokensNames/:
    get:
      tags:
      - acsrf
      description: Lists the names of all anti-CSRF tokens
      operationId: acsrfViewOptionTokensNames
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/acsrf/action/addOptionToken/:
    get:
      tags:
      - acsrf
      description: Adds an anti-CSRF token with the given name, enabled by default
      operationId: acsrfActionAddOptionToken
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/acsrf/action/removeOptionToken/:
    get:
      tags:
      - acsrf
      description: Removes the anti-CSRF token with the given name
      operationId: acsrfActionRemoveOptionToken
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/acsrf/other/genForm/:
    get:
      tags:
      - acsrf
      description: Generate a form for testing lack of anti-CSRF tokens - typically
        invoked via ZAP
      operationId: acsrfOtherGenForm
      parameters:
      - name: hrefId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/view/scanOnlyInScope/:
    get:
      tags:
      - pscan
      description: Tells whether or not the passive scan should be performed only
        on messages that are in scope.
      operationId: pscanViewScanOnlyInScope
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/view/recordsToScan/:
    get:
      tags:
      - pscan
      description: The number of records the passive scanner still has to scan
      operationId: pscanViewRecordsToScan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/view/scanners/:
    get:
      tags:
      - pscan
      description: Lists all passive scanners with its ID, name, enabled state and
        alert threshold.
      operationId: pscanViewScanners
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/view/currentRule/:
    get:
      tags:
      - pscan
      description: Show information about the passive scan rule currently being run
        (if any).
      operationId: pscanViewCurrentRule
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/view/maxAlertsPerRule/:
    get:
      tags:
      - pscan
      description: Gets the maximum number of alerts a passive scan rule should raise.
      operationId: pscanViewMaxAlertsPerRule
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/action/setEnabled/:
    get:
      tags:
      - pscan
      description: 'Sets whether or not the passive scanning is enabled (Note: the
        enabled state is not persisted).'
      operationId: pscanActionSetEnabled
      parameters:
      - name: enabled
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/action/setScanOnlyInScope/:
    get:
      tags:
      - pscan
      description: Sets whether or not the passive scan should be performed only on
        messages that are in scope.
      operationId: pscanActionSetScanOnlyInScope
      parameters:
      - name: onlyInScope
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/action/enableAllScanners/:
    get:
      tags:
      - pscan
      description: Enables all passive scanners
      operationId: pscanActionEnableAllScanners
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/action/disableAllScanners/:
    get:
      tags:
      - pscan
      description: Disables all passive scanners
      operationId: pscanActionDisableAllScanners
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/action/enableScanners/:
    get:
      tags:
      - pscan
      description: Enables all passive scanners with the given IDs (comma separated
        list of IDs)
      operationId: pscanActionEnableScanners
      parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/action/disableScanners/:
    get:
      tags:
      - pscan
      description: Disables all passive scanners with the given IDs (comma separated
        list of IDs)
      operationId: pscanActionDisableScanners
      parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/action/setScannerAlertThreshold/:
    get:
      tags:
      - pscan
      description: 'Sets the alert threshold of the passive scanner with the given
        ID, accepted values for alert threshold: OFF, DEFAULT, LOW, MEDIUM and HIGH'
      operationId: pscanActionSetScannerAlertThreshold
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: alertThreshold
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/pscan/action/setMaxAlertsPerRule/:
    get:
      tags:
      - pscan
      description: Sets the maximum number of alerts a passive scan rule should raise.
      operationId: pscanActionSetMaxAlertsPerRule
      parameters:
      - name: maxAlerts
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/search/view/urlsByUrlRegex/:
    get:
      tags:
      - search
      description: Returns the URLs of the HTTP messages that match the given regular
        expression in the URL optionally filtered by URL and paginated with 'start'
        position and 'count' of messages.
      operationId: searchViewUrlsByUrlRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/search/view/urlsByRequestRegex/:
    get:
      tags:
      - search
      description: Returns the URLs of the HTTP messages that match the given regular
        expression in the request optionally filtered by URL and paginated with 'start'
        position and 'count' of messages.
      operationId: searchViewUrlsByRequestRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/search/view/urlsByResponseRegex/:
    get:
      tags:
      - search
      description: Returns the URLs of the HTTP messages that match the given regular
        expression in the response optionally filtered by URL and paginated with 'start'
        position and 'count' of messages.
      operationId: searchViewUrlsByResponseRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/search/view/urlsByHeaderRegex/:
    get:
      tags:
      - search
      description: Returns the URLs of the HTTP messages that match the given regular
        expression in the header(s) optionally filtered by URL and paginated with
        'start' position and 'count' of messages.
      operationId: searchViewUrlsByHeaderRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/search/view/messagesByUrlRegex/:
    get:
      tags:
      - search
      description: Returns the HTTP messages that match the given regular expression
        in the URL optionally filtered by URL and paginated with 'start' position
        and 'count' of messages.
      operationId: searchViewMessagesByUrlRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/search/view/messagesByRequestRegex/:
    get:
      tags:
      - search
      description: Returns the HTTP messages that match the given regular expression
        in the request optionally filtered by URL and paginated with 'start' position
        and 'count' of messages.
      operationId: searchViewMessagesByRequestRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/search/view/messagesByResponseRegex/:
    get:
      tags:
      - search
      description: Returns the HTTP messages that match the given regular expression
        in the response optionally filtered by URL and paginated with 'start' position
        and 'count' of messages.
      operationId: searchViewMessagesByResponseRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/search/view/messagesByHeaderRegex/:
    get:
      tags:
      - search
      description: Returns the HTTP messages that match the given regular expression
        in the header(s) optionally filtered by URL and paginated with 'start' position
        and 'count' of messages.
      operationId: searchViewMessagesByHeaderRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/search/other/harByUrlRegex/:
    get:
      tags:
      - search
      description: Returns the HTTP messages, in HAR format, that match the given
        regular expression in the URL optionally filtered by URL and paginated with
        'start' position and 'count' of messages.
      operationId: searchOtherHarByUrlRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/search/other/harByRequestRegex/:
    get:
      tags:
      - search
      description: Returns the HTTP messages, in HAR format, that match the given
        regular expression in the request optionally filtered by URL and paginated
        with 'start' position and 'count' of messages.
      operationId: searchOtherHarByRequestRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/search/other/harByResponseRegex/:
    get:
      tags:
      - search
      description: Returns the HTTP messages, in HAR format, that match the given
        regular expression in the response optionally filtered by URL and paginated
        with 'start' position and 'count' of messages.
      operationId: searchOtherHarByResponseRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/search/other/harByHeaderRegex/:
    get:
      tags:
      - search
      description: Returns the HTTP messages, in HAR format, that match the given
        regular expression in the header(s) optionally filtered by URL and paginated
        with 'start' position and 'count' of messages.
      operationId: searchOtherHarByHeaderRegex
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/latestVersionNumber/:
    get:
      tags:
      - autoupdate
      description: Returns the latest version number
      operationId: autoupdateViewLatestVersionNumber
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/isLatestVersion/:
    get:
      tags:
      - autoupdate
      description: Returns 'true' if ZAP is on the latest version
      operationId: autoupdateViewIsLatestVersion
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/installedAddons/:
    get:
      tags:
      - autoupdate
      description: Return a list of all of the installed add-ons
      operationId: autoupdateViewInstalledAddons
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/localAddons/:
    get:
      tags:
      - autoupdate
      description: Returns a list with all local add-ons, installed or not.
      operationId: autoupdateViewLocalAddons
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/newAddons/:
    get:
      tags:
      - autoupdate
      description: Return a list of any add-ons that have been added to the Marketplace
        since the last check for updates
      operationId: autoupdateViewNewAddons
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/updatedAddons/:
    get:
      tags:
      - autoupdate
      description: Return a list of any add-ons that have been changed in the Marketplace
        since the last check for updates
      operationId: autoupdateViewUpdatedAddons
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/marketplaceAddons/:
    get:
      tags:
      - autoupdate
      description: Return a list of all of the add-ons on the ZAP Marketplace (this
        information is read once and then cached)
      operationId: autoupdateViewMarketplaceAddons
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionAddonDirectories/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionAddonDirectories
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionDayLastChecked/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionDayLastChecked
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionDayLastInstallWarned/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionDayLastInstallWarned
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionDayLastUpdateWarned/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionDayLastUpdateWarned
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionDownloadDirectory/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionDownloadDirectory
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionCheckAddonUpdates/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionCheckAddonUpdates
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionCheckOnStart/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionCheckOnStart
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionDownloadNewRelease/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionDownloadNewRelease
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionInstallAddonUpdates/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionInstallAddonUpdates
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionInstallScannerRules/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionInstallScannerRules
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionReportAlphaAddons/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionReportAlphaAddons
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionReportBetaAddons/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionReportBetaAddons
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/view/optionReportReleaseAddons/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateViewOptionReportReleaseAddons
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/downloadLatestRelease/:
    get:
      tags:
      - autoupdate
      description: Downloads the latest release, if any
      operationId: autoupdateActionDownloadLatestRelease
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/installAddon/:
    get:
      tags:
      - autoupdate
      description: Installs or updates the specified add-on, returning when complete
        (ie not asynchronously)
      operationId: autoupdateActionInstallAddon
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/installLocalAddon/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateActionInstallLocalAddon
      parameters:
      - name: file
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/uninstallAddon/:
    get:
      tags:
      - autoupdate
      description: Uninstalls the specified add-on
      operationId: autoupdateActionUninstallAddon
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/setOptionCheckAddonUpdates/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateActionSetOptionCheckAddonUpdates
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/setOptionCheckOnStart/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateActionSetOptionCheckOnStart
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/setOptionDownloadNewRelease/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateActionSetOptionDownloadNewRelease
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/setOptionInstallAddonUpdates/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateActionSetOptionInstallAddonUpdates
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/setOptionInstallScannerRules/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateActionSetOptionInstallScannerRules
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/setOptionReportAlphaAddons/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateActionSetOptionReportAlphaAddons
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/setOptionReportBetaAddons/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateActionSetOptionReportBetaAddons
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/autoupdate/action/setOptionReportReleaseAddons/:
    get:
      tags:
      - autoupdate
      operationId: autoupdateActionSetOptionReportReleaseAddons
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/status/:
    get:
      tags:
      - spider
      operationId: spiderViewStatus
      parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/results/:
    get:
      tags:
      - spider
      operationId: spiderViewResults
      parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/fullResults/:
    get:
      tags:
      - spider
      operationId: spiderViewFullResults
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/scans/:
    get:
      tags:
      - spider
      operationId: spiderViewScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/excludedFromScan/:
    get:
      tags:
      - spider
      description: Gets the regexes of URLs excluded from the spider scans.
      operationId: spiderViewExcludedFromScan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/allUrls/:
    get:
      tags:
      - spider
      description: Returns a list of unique URLs from the history table based on HTTP
        messages added by the Spider.
      operationId: spiderViewAllUrls
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/addedNodes/:
    get:
      tags:
      - spider
      description: Returns a list of the names of the nodes added to the Sites tree
        by the specified scan.
      operationId: spiderViewAddedNodes
      parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/domainsAlwaysInScope/:
    get:
      tags:
      - spider
      description: 'Gets all the domains that are always in scope. For each domain
        the following are shown: the index, the value (domain), if enabled, and if
        specified as a regex.'
      operationId: spiderViewDomainsAlwaysInScope
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionDomainsAlwaysInScope/:
    get:
      tags:
      - spider
      description: Use view domainsAlwaysInScope instead.
      operationId: spiderViewOptionDomainsAlwaysInScope
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/spider/view/optionDomainsAlwaysInScopeEnabled/:
    get:
      tags:
      - spider
      description: Use view domainsAlwaysInScope instead.
      operationId: spiderViewOptionDomainsAlwaysInScopeEnabled
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/spider/view/optionHandleParameters/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionHandleParameters
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionMaxChildren/:
    get:
      tags:
      - spider
      description: Gets the maximum number of child nodes (per node) that can be crawled,
        0 means no limit.
      operationId: spiderViewOptionMaxChildren
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionMaxDepth/:
    get:
      tags:
      - spider
      description: Gets the maximum depth the spider can crawl, 0 if unlimited.
      operationId: spiderViewOptionMaxDepth
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionMaxDuration/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionMaxDuration
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionMaxParseSizeBytes/:
    get:
      tags:
      - spider
      description: Gets the maximum size, in bytes, that a response might have to
        be parsed.
      operationId: spiderViewOptionMaxParseSizeBytes
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionMaxScansInUI/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionMaxScansInUI
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionRequestWaitTime/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionRequestWaitTime
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionScope/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionScope
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionScopeText/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionScopeText
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionSkipURLString/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionSkipURLString
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionThreadCount/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionThreadCount
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionUserAgent/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionUserAgent
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionAcceptCookies/:
    get:
      tags:
      - spider
      description: Gets whether or not a spider process should accept cookies while
        spidering.
      operationId: spiderViewOptionAcceptCookies
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionHandleODataParametersVisited/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionHandleODataParametersVisited
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionParseComments/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionParseComments
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionParseGit/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionParseGit
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionParseRobotsTxt/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionParseRobotsTxt
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionParseSVNEntries/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionParseSVNEntries
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionParseSitemapXml/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionParseSitemapXml
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionPostForm/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionPostForm
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionProcessForm/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionProcessForm
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionSendRefererHeader/:
    get:
      tags:
      - spider
      description: Gets whether or not the 'Referer' header should be sent while spidering.
      operationId: spiderViewOptionSendRefererHeader
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/view/optionShowAdvancedDialog/:
    get:
      tags:
      - spider
      operationId: spiderViewOptionShowAdvancedDialog
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/scan/:
    get:
      tags:
      - spider
      description: Runs the spider against the given URL (or context). Optionally,
        the 'maxChildren' parameter can be set to limit the number of children scanned,
        the 'recurse' parameter can be used to prevent the spider from seeding recursively,
        the parameter 'contextName' can be used to constrain the scan to a Context
        and the parameter 'subtreeOnly' allows to restrict the spider under a site's
        subtree (using the specified 'url').
      operationId: spiderActionScan
      parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxChildren
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: recurse
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: contextName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: subtreeOnly
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/scanAsUser/:
    get:
      tags:
      - spider
      description: Runs the spider from the perspective of a User, obtained using
        the given Context ID and User ID. See 'scan' action for more details.
      operationId: spiderActionScanAsUser
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: url
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxChildren
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: recurse
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: subtreeOnly
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/pause/:
    get:
      tags:
      - spider
      operationId: spiderActionPause
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/resume/:
    get:
      tags:
      - spider
      operationId: spiderActionResume
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/stop/:
    get:
      tags:
      - spider
      operationId: spiderActionStop
      parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/removeScan/:
    get:
      tags:
      - spider
      operationId: spiderActionRemoveScan
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/pauseAllScans/:
    get:
      tags:
      - spider
      operationId: spiderActionPauseAllScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/resumeAllScans/:
    get:
      tags:
      - spider
      operationId: spiderActionResumeAllScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/stopAllScans/:
    get:
      tags:
      - spider
      operationId: spiderActionStopAllScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/removeAllScans/:
    get:
      tags:
      - spider
      operationId: spiderActionRemoveAllScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/clearExcludedFromScan/:
    get:
      tags:
      - spider
      description: Clears the regexes of URLs excluded from the spider scans.
      operationId: spiderActionClearExcludedFromScan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/excludeFromScan/:
    get:
      tags:
      - spider
      description: Adds a regex of URLs that should be excluded from the spider scans.
      operationId: spiderActionExcludeFromScan
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/addDomainAlwaysInScope/:
    get:
      tags:
      - spider
      description: Adds a new domain that's always in scope, using the specified value.
        Optionally sets if the new entry is enabled (default, true) and whether or
        not the new value is specified as a regex (default, false).
      operationId: spiderActionAddDomainAlwaysInScope
      parameters:
      - name: value
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: isRegex
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: isEnabled
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/modifyDomainAlwaysInScope/:
    get:
      tags:
      - spider
      description: Modifies a domain that's always in scope. Allows to modify the
        value, if enabled or if a regex. The domain is selected with its index, which
        can be obtained with the view domainsAlwaysInScope.
      operationId: spiderActionModifyDomainAlwaysInScope
      parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: value
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: isRegex
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: isEnabled
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/removeDomainAlwaysInScope/:
    get:
      tags:
      - spider
      description: Removes a domain that's always in scope, with the given index.
        The index can be obtained with the view domainsAlwaysInScope.
      operationId: spiderActionRemoveDomainAlwaysInScope
      parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/enableAllDomainsAlwaysInScope/:
    get:
      tags:
      - spider
      description: Enables all domains that are always in scope.
      operationId: spiderActionEnableAllDomainsAlwaysInScope
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/disableAllDomainsAlwaysInScope/:
    get:
      tags:
      - spider
      description: Disables all domains that are always in scope.
      operationId: spiderActionDisableAllDomainsAlwaysInScope
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionHandleParameters/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionHandleParameters
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionScopeString/:
    get:
      tags:
      - spider
      description: Use actions [add|modify|remove]DomainAlwaysInScope instead.
      operationId: spiderActionSetOptionScopeString
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionSkipURLString/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionSkipURLString
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionUserAgent/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionUserAgent
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionAcceptCookies/:
    get:
      tags:
      - spider
      description: Sets whether or not a spider process should accept cookies while
        spidering.
      operationId: spiderActionSetOptionAcceptCookies
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionHandleODataParametersVisited/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionHandleODataParametersVisited
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionMaxChildren/:
    get:
      tags:
      - spider
      description: Sets the maximum number of child nodes (per node) that can be crawled,
        0 means no limit.
      operationId: spiderActionSetOptionMaxChildren
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionMaxDepth/:
    get:
      tags:
      - spider
      description: Sets the maximum depth the spider can crawl, 0 for unlimited depth.
      operationId: spiderActionSetOptionMaxDepth
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionMaxDuration/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionMaxDuration
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionMaxParseSizeBytes/:
    get:
      tags:
      - spider
      description: Sets the maximum size, in bytes, that a response might have to
        be parsed. This allows the spider to skip big responses/files.
      operationId: spiderActionSetOptionMaxParseSizeBytes
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionMaxScansInUI/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionMaxScansInUI
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionParseComments/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionParseComments
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionParseGit/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionParseGit
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionParseRobotsTxt/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionParseRobotsTxt
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionParseSVNEntries/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionParseSVNEntries
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionParseSitemapXml/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionParseSitemapXml
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionPostForm/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionPostForm
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionProcessForm/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionProcessForm
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionRequestWaitTime/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionRequestWaitTime
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionSendRefererHeader/:
    get:
      tags:
      - spider
      description: Sets whether or not the 'Referer' header should be sent while spidering.
      operationId: spiderActionSetOptionSendRefererHeader
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionShowAdvancedDialog/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionShowAdvancedDialog
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/spider/action/setOptionThreadCount/:
    get:
      tags:
      - spider
      operationId: spiderActionSetOptionThreadCount
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/hosts/:
    get:
      tags:
      - core
      description: Gets the name of the hosts accessed through/by ZAP
      operationId: coreViewHosts
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/sites/:
    get:
      tags:
      - core
      description: Gets the sites accessed through/by ZAP (scheme and domain)
      operationId: coreViewSites
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/urls/:
    get:
      tags:
      - core
      description: Gets the URLs accessed through/by ZAP, optionally filtering by
        (base) URL.
      operationId: coreViewUrls
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/childNodes/:
    get:
      tags:
      - core
      description: Gets the child nodes underneath the specified URL in the Sites
        tree
      operationId: coreViewChildNodes
      parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/message/:
    get:
      tags:
      - core
      description: Gets the HTTP message with the given ID. Returns the ID, request/response
        headers and bodies, cookies, note, type, RTT, and timestamp.
      operationId: coreViewMessage
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/messages/:
    get:
      tags:
      - core
      description: Gets the HTTP messages sent by ZAP, request and response, optionally
        filtered by URL and paginated with 'start' position and 'count' of messages
      operationId: coreViewMessages
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/messagesById/:
    get:
      tags:
      - core
      description: Gets the HTTP messages with the given IDs.
      operationId: coreViewMessagesById
      parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/numberOfMessages/:
    get:
      tags:
      - core
      description: Gets the number of messages, optionally filtering by URL
      operationId: coreViewNumberOfMessages
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/mode/:
    get:
      tags:
      - core
      description: Gets the mode
      operationId: coreViewMode
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/version/:
    get:
      tags:
      - core
      description: Gets ZAP version
      operationId: coreViewVersion
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/excludedFromProxy/:
    get:
      tags:
      - core
      description: Gets the regular expressions, applied to URLs, to exclude from
        the local proxies.
      operationId: coreViewExcludedFromProxy
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/homeDirectory/:
    get:
      tags:
      - core
      operationId: coreViewHomeDirectory
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/sessionLocation/:
    get:
      tags:
      - core
      description: Gets the location of the current session file
      operationId: coreViewSessionLocation
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/proxyChainExcludedDomains/:
    get:
      tags:
      - core
      description: 'Gets all the domains that are excluded from the outgoing proxy.
        For each domain the following are shown: the index, the value (domain), if
        enabled, and if specified as a regex.'
      operationId: coreViewProxyChainExcludedDomains
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionProxyChainSkipName/:
    get:
      tags:
      - core
      description: Use view proxyChainExcludedDomains instead.
      operationId: coreViewOptionProxyChainSkipName
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/core/view/optionProxyExcludedDomains/:
    get:
      tags:
      - core
      description: Use view proxyChainExcludedDomains instead.
      operationId: coreViewOptionProxyExcludedDomains
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/core/view/optionProxyExcludedDomainsEnabled/:
    get:
      tags:
      - core
      description: Use view proxyChainExcludedDomains instead.
      operationId: coreViewOptionProxyExcludedDomainsEnabled
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/core/view/zapHomePath/:
    get:
      tags:
      - core
      description: Gets the path to ZAP's home directory.
      operationId: coreViewZapHomePath
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionMaximumAlertInstances/:
    get:
      tags:
      - core
      description: Gets the maximum number of alert instances to include in a report.
      operationId: coreViewOptionMaximumAlertInstances
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionMergeRelatedAlerts/:
    get:
      tags:
      - core
      description: Gets whether or not related alerts will be merged in any reports
        generated.
      operationId: coreViewOptionMergeRelatedAlerts
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionAlertOverridesFilePath/:
    get:
      tags:
      - core
      description: Gets the path to the file with alert overrides.
      operationId: coreViewOptionAlertOverridesFilePath
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/alert/:
    get:
      tags:
      - core
      description: Gets the alert with the given ID, the corresponding HTTP message
        can be obtained with the 'messageId' field and 'message' API method
      operationId: coreViewAlert
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/core/view/alerts/:
    get:
      tags:
      - core
      description: Gets the alerts raised by ZAP, optionally filtering by URL or riskId,
        and paginating with 'start' position and 'count' of alerts
      operationId: coreViewAlerts
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: riskId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/core/view/alertsSummary/:
    get:
      tags:
      - core
      description: Gets number of alerts grouped by each risk level, optionally filtering
        by URL
      operationId: coreViewAlertsSummary
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/core/view/numberOfAlerts/:
    get:
      tags:
      - core
      description: Gets the number of alerts, optionally filtering by URL or riskId
      operationId: coreViewNumberOfAlerts
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: riskId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/core/view/optionDefaultUserAgent/:
    get:
      tags:
      - core
      description: Gets the user agent that ZAP should use when creating HTTP messages
        (for example, spider messages or CONNECT requests to outgoing proxy).
      operationId: coreViewOptionDefaultUserAgent
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionDnsTtlSuccessfulQueries/:
    get:
      tags:
      - core
      description: Gets the TTL (in seconds) of successful DNS queries.
      operationId: coreViewOptionDnsTtlSuccessfulQueries
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionHttpState/:
    get:
      tags:
      - core
      operationId: coreViewOptionHttpState
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionProxyChainName/:
    get:
      tags:
      - core
      operationId: coreViewOptionProxyChainName
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionProxyChainPassword/:
    get:
      tags:
      - core
      operationId: coreViewOptionProxyChainPassword
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionProxyChainPort/:
    get:
      tags:
      - core
      operationId: coreViewOptionProxyChainPort
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionProxyChainRealm/:
    get:
      tags:
      - core
      operationId: coreViewOptionProxyChainRealm
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionProxyChainUserName/:
    get:
      tags:
      - core
      operationId: coreViewOptionProxyChainUserName
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionTimeoutInSecs/:
    get:
      tags:
      - core
      description: Gets the connection time out, in seconds.
      operationId: coreViewOptionTimeoutInSecs
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionHttpStateEnabled/:
    get:
      tags:
      - core
      operationId: coreViewOptionHttpStateEnabled
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionProxyChainPrompt/:
    get:
      tags:
      - core
      operationId: coreViewOptionProxyChainPrompt
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionSingleCookieRequestHeader/:
    get:
      tags:
      - core
      operationId: coreViewOptionSingleCookieRequestHeader
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionUseProxyChain/:
    get:
      tags:
      - core
      operationId: coreViewOptionUseProxyChain
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/view/optionUseProxyChainAuth/:
    get:
      tags:
      - core
      operationId: coreViewOptionUseProxyChainAuth
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/accessUrl/:
    get:
      tags:
      - core
      description: Convenient and simple action to access a URL, optionally following
        redirections. Returns the request sent and response received and followed
        redirections, if any. Other actions are available which offer more control
        on what is sent, like, 'sendRequest' or 'sendHarRequest'.
      operationId: coreActionAccessUrl
      parameters:
      - name: url
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: followRedirects
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/shutdown/:
    get:
      tags:
      - core
      description: Shuts down ZAP
      operationId: coreActionShutdown
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/newSession/:
    get:
      tags:
      - core
      description: Creates a new session, optionally overwriting existing files. If
        a relative path is specified it will be resolved against the "session" directory
        in ZAP "home" dir.
      operationId: coreActionNewSession
      parameters:
      - name: name
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: overwrite
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/loadSession/:
    get:
      tags:
      - core
      description: Loads the session with the given name. If a relative path is specified
        it will be resolved against the "session" directory in ZAP "home" dir.
      operationId: coreActionLoadSession
      parameters:
      - name: name
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/saveSession/:
    get:
      tags:
      - core
      description: Saves the session with the name supplied, optionally overwriting
        existing files. If a relative path is specified it will be resolved against
        the "session" directory in ZAP "home" dir.
      operationId: coreActionSaveSession
      parameters:
      - name: name
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: overwrite
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/snapshotSession/:
    get:
      tags:
      - core
      description: Snapshots the session, optionally with the given name, and overwriting
        existing files. If no name is specified the name of the current session with
        a timestamp appended is used. If a relative path is specified it will be resolved
        against the "session" directory in ZAP "home" dir.
      operationId: coreActionSnapshotSession
      parameters:
      - name: name
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: overwrite
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/clearExcludedFromProxy/:
    get:
      tags:
      - core
      description: Clears the regexes of URLs excluded from the local proxies.
      operationId: coreActionClearExcludedFromProxy
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/excludeFromProxy/:
    get:
      tags:
      - core
      description: Adds a regex of URLs that should be excluded from the local proxies.
      operationId: coreActionExcludeFromProxy
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setHomeDirectory/:
    get:
      tags:
      - core
      operationId: coreActionSetHomeDirectory
      parameters:
      - name: dir
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setMode/:
    get:
      tags:
      - core
      description: Sets the mode, which may be one of [safe, protect, standard, attack]
      operationId: coreActionSetMode
      parameters:
      - name: mode
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/generateRootCA/:
    get:
      tags:
      - core
      description: Generates a new Root CA certificate for the local proxies.
      operationId: coreActionGenerateRootCA
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/sendRequest/:
    get:
      tags:
      - core
      description: Sends the HTTP request, optionally following redirections. Returns
        the request sent and response received and followed redirections, if any.
        The Mode is enforced when sending the request (and following redirections),
        custom manual requests are not allowed in 'Safe' mode nor in 'Protected' mode
        if out of scope.
      operationId: coreActionSendRequest
      parameters:
      - name: request
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: followRedirects
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/runGarbageCollection/:
    get:
      tags:
      - core
      operationId: coreActionRunGarbageCollection
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/deleteSiteNode/:
    get:
      tags:
      - core
      description: Deletes the site node found in the Sites Tree on the basis of the
        URL, HTTP method, and post data (if applicable and specified).
      operationId: coreActionDeleteSiteNode
      parameters:
      - name: url
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: method
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: postData
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/addProxyChainExcludedDomain/:
    get:
      tags:
      - core
      description: Adds a domain to be excluded from the outgoing proxy, using the
        specified value. Optionally sets if the new entry is enabled (default, true)
        and whether or not the new value is specified as a regex (default, false).
      operationId: coreActionAddProxyChainExcludedDomain
      parameters:
      - name: value
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: isRegex
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: isEnabled
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/modifyProxyChainExcludedDomain/:
    get:
      tags:
      - core
      description: Modifies a domain excluded from the outgoing proxy. Allows to modify
        the value, if enabled or if a regex. The domain is selected with its index,
        which can be obtained with the view proxyChainExcludedDomains.
      operationId: coreActionModifyProxyChainExcludedDomain
      parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: value
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: isRegex
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: isEnabled
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/removeProxyChainExcludedDomain/:
    get:
      tags:
      - core
      description: Removes a domain excluded from the outgoing proxy, with the given
        index. The index can be obtained with the view proxyChainExcludedDomains.
      operationId: coreActionRemoveProxyChainExcludedDomain
      parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/enableAllProxyChainExcludedDomains/:
    get:
      tags:
      - core
      description: Enables all domains excluded from the outgoing proxy.
      operationId: coreActionEnableAllProxyChainExcludedDomains
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/disableAllProxyChainExcludedDomains/:
    get:
      tags:
      - core
      description: Disables all domains excluded from the outgoing proxy.
      operationId: coreActionDisableAllProxyChainExcludedDomains
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionMaximumAlertInstances/:
    get:
      tags:
      - core
      description: Sets the maximum number of alert instances to include in a report.
        A value of zero is treated as unlimited.
      operationId: coreActionSetOptionMaximumAlertInstances
      parameters:
      - name: numberOfInstances
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionMergeRelatedAlerts/:
    get:
      tags:
      - core
      description: Sets whether or not related alerts will be merged in any reports
        generated.
      operationId: coreActionSetOptionMergeRelatedAlerts
      parameters:
      - name: enabled
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionAlertOverridesFilePath/:
    get:
      tags:
      - core
      description: Sets (or clears, if empty) the path to the file with alert overrides.
      operationId: coreActionSetOptionAlertOverridesFilePath
      parameters:
      - name: filePath
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/enablePKCS12ClientCertificate/:
    get:
      tags:
      - core
      description: Enables use of a PKCS12 client certificate for the certificate
        with the given file system path, password, and optional index.
      operationId: coreActionEnablePKCS12ClientCertificate
      parameters:
      - name: filePath
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: index
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/disableClientCertificate/:
    get:
      tags:
      - core
      description: Disables the option for use of client certificates.
      operationId: coreActionDisableClientCertificate
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/deleteAllAlerts/:
    get:
      tags:
      - core
      description: Deletes all alerts of the current session.
      operationId: coreActionDeleteAllAlerts
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/core/action/deleteAlert/:
    get:
      tags:
      - core
      description: Deletes the alert with the given ID.
      operationId: coreActionDeleteAlert
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/core/action/setOptionDefaultUserAgent/:
    get:
      tags:
      - core
      description: Sets the user agent that ZAP should use when creating HTTP messages
        (for example, spider messages or CONNECT requests to outgoing proxy).
      operationId: coreActionSetOptionDefaultUserAgent
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionProxyChainName/:
    get:
      tags:
      - core
      operationId: coreActionSetOptionProxyChainName
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionProxyChainPassword/:
    get:
      tags:
      - core
      operationId: coreActionSetOptionProxyChainPassword
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionProxyChainRealm/:
    get:
      tags:
      - core
      operationId: coreActionSetOptionProxyChainRealm
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionProxyChainSkipName/:
    get:
      tags:
      - core
      description: Use actions [add|modify|remove]ProxyChainExcludedDomain instead.
      operationId: coreActionSetOptionProxyChainSkipName
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionProxyChainUserName/:
    get:
      tags:
      - core
      operationId: coreActionSetOptionProxyChainUserName
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionDnsTtlSuccessfulQueries/:
    get:
      tags:
      - core
      description: Sets the TTL (in seconds) of successful DNS queries (applies after
        ZAP restart).
      operationId: coreActionSetOptionDnsTtlSuccessfulQueries
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionHttpStateEnabled/:
    get:
      tags:
      - core
      operationId: coreActionSetOptionHttpStateEnabled
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionProxyChainPort/:
    get:
      tags:
      - core
      operationId: coreActionSetOptionProxyChainPort
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionProxyChainPrompt/:
    get:
      tags:
      - core
      operationId: coreActionSetOptionProxyChainPrompt
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionSingleCookieRequestHeader/:
    get:
      tags:
      - core
      operationId: coreActionSetOptionSingleCookieRequestHeader
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionTimeoutInSecs/:
    get:
      tags:
      - core
      description: Sets the connection time out, in seconds.
      operationId: coreActionSetOptionTimeoutInSecs
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionUseProxyChain/:
    get:
      tags:
      - core
      description: Sets whether or not the outgoing proxy should be used. The address/hostname
        of the outgoing proxy must be set to enable this option.
      operationId: coreActionSetOptionUseProxyChain
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/core/action/setOptionUseProxyChainAuth/:
    get:
      tags:
      - core
      operationId: coreActionSetOptionUseProxyChainAuth
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/proxy.pac/:
    get:
      tags:
      - core
      operationId: coreOtherProxy.pac
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/rootcert/:
    get:
      tags:
      - core
      description: Gets the Root CA certificate used by the local proxies.
      operationId: coreOtherRootcert
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/setproxy/:
    get:
      tags:
      - core
      operationId: coreOtherSetproxy
      parameters:
      - name: proxy
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/xmlreport/:
    get:
      tags:
      - core
      description: Generates a report in XML format
      operationId: coreOtherXmlreport
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/htmlreport/:
    get:
      tags:
      - core
      description: Generates a report in HTML format
      operationId: coreOtherHtmlreport
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/jsonreport/:
    get:
      tags:
      - core
      description: Generates a report in JSON format
      operationId: coreOtherJsonreport
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/mdreport/:
    get:
      tags:
      - core
      description: Generates a report in Markdown format
      operationId: coreOtherMdreport
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/messageHar/:
    get:
      tags:
      - core
      description: Gets the message with the given ID in HAR format
      operationId: coreOtherMessageHar
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/messagesHar/:
    get:
      tags:
      - core
      description: Gets the HTTP messages sent through/by ZAP, in HAR format, optionally
        filtered by URL and paginated with 'start' position and 'count' of messages
      operationId: coreOtherMessagesHar
      parameters:
      - name: baseurl
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: start
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: count
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/messagesHarById/:
    get:
      tags:
      - core
      description: Gets the HTTP messages with the given IDs, in HAR format.
      operationId: coreOtherMessagesHarById
      parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /OTHER/core/other/sendHarRequest/:
    get:
      tags:
      - core
      description: Sends the first HAR request entry, optionally following redirections.
        Returns, in HAR format, the request sent and response received and followed
        redirections, if any. The Mode is enforced when sending the request (and following
        redirections), custom manual requests are not allowed in 'Safe' mode nor in
        'Protected' mode if out of scope.
      operationId: coreOtherSendHarRequest
      parameters:
      - name: request
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: followRedirects
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/params/view/params/:
    get:
      tags:
      - params
      description: Shows the parameters for the specified site, or for all sites if
        the site is not specified
      operationId: paramsViewParams
      parameters:
      - name: site
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/status/:
    get:
      tags:
      - ascan
      operationId: ascanViewStatus
      parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/scanProgress/:
    get:
      tags:
      - ascan
      operationId: ascanViewScanProgress
      parameters:
      - name: scanId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/messagesIds/:
    get:
      tags:
      - ascan
      description: Gets the IDs of the messages sent during the scan with the given
        ID. A message can be obtained with 'message' core view.
      operationId: ascanViewMessagesIds
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/alertsIds/:
    get:
      tags:
      - ascan
      description: Gets the IDs of the alerts raised during the scan with the given
        ID. An alert can be obtained with 'alert' core view.
      operationId: ascanViewAlertsIds
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/scans/:
    get:
      tags:
      - ascan
      operationId: ascanViewScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/scanPolicyNames/:
    get:
      tags:
      - ascan
      operationId: ascanViewScanPolicyNames
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/excludedFromScan/:
    get:
      tags:
      - ascan
      description: Gets the regexes of URLs excluded from the active scans.
      operationId: ascanViewExcludedFromScan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/scanners/:
    get:
      tags:
      - ascan
      description: Gets the scanners, optionally, of the given scan policy and/or
        scanner policy/category ID.
      operationId: ascanViewScanners
      parameters:
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: policyId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/policies/:
    get:
      tags:
      - ascan
      operationId: ascanViewPolicies
      parameters:
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: policyId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/attackModeQueue/:
    get:
      tags:
      - ascan
      operationId: ascanViewAttackModeQueue
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/excludedParams/:
    get:
      tags:
      - ascan
      description: 'Gets all the parameters that are excluded. For each parameter
        the following are shown: the name, the URL, and the parameter type.'
      operationId: ascanViewExcludedParams
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionExcludedParamList/:
    get:
      tags:
      - ascan
      description: Use view excludedParams instead.
      operationId: ascanViewOptionExcludedParamList
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /JSON/ascan/view/excludedParamTypes/:
    get:
      tags:
      - ascan
      description: 'Gets all the types of excluded parameters. For each type the following
        are shown: the ID and the name.'
      operationId: ascanViewExcludedParamTypes
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionAttackPolicy/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionAttackPolicy
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionDefaultPolicy/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionDefaultPolicy
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionDelayInMs/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionDelayInMs
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionHandleAntiCSRFTokens/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionHandleAntiCSRFTokens
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionHostPerScan/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionHostPerScan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionMaxChartTimeInMins/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionMaxChartTimeInMins
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionMaxResultsToList/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionMaxResultsToList
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionMaxRuleDurationInMins/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionMaxRuleDurationInMins
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionMaxScanDurationInMins/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionMaxScanDurationInMins
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionMaxScansInUI/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionMaxScansInUI
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionTargetParamsEnabledRPC/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionTargetParamsEnabledRPC
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionTargetParamsInjectable/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionTargetParamsInjectable
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionThreadPerHost/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionThreadPerHost
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionAddQueryParam/:
    get:
      tags:
      - ascan
      description: Tells whether or not the active scanner should add a query parameter
        to GET request that don't have parameters to start with.
      operationId: ascanViewOptionAddQueryParam
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionAllowAttackOnStart/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionAllowAttackOnStart
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionInjectPluginIdInHeader/:
    get:
      tags:
      - ascan
      description: Tells whether or not the active scanner should inject the HTTP
        request header X-ZAP-Scan-ID, with the ID of the scanner that's sending the
        requests.
      operationId: ascanViewOptionInjectPluginIdInHeader
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionPromptInAttackMode/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionPromptInAttackMode
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionPromptToClearFinishedScans/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionPromptToClearFinishedScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionRescanInAttackMode/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionRescanInAttackMode
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionScanHeadersAllRequests/:
    get:
      tags:
      - ascan
      description: Tells whether or not the HTTP Headers of all requests should be
        scanned. Not just requests that send parameters, through the query or request
        body.
      operationId: ascanViewOptionScanHeadersAllRequests
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/view/optionShowAdvancedDialog/:
    get:
      tags:
      - ascan
      operationId: ascanViewOptionShowAdvancedDialog
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/scan/:
    get:
      tags:
      - ascan
      description: Runs the active scanner against the given URL and/or Context. Optionally,
        the 'recurse' parameter can be used to scan URLs under the given URL, the
        parameter 'inScopeOnly' can be used to constrain the scan to URLs that are
        in scope (ignored if a Context is specified), the parameter 'scanPolicyName'
        allows to specify the scan policy (if none is given it uses the default scan
        policy), the parameters 'method' and 'postData' allow to select a given request
        in conjunction with the given URL.
      operationId: ascanActionScan
      parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: recurse
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: inScopeOnly
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: method
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: postData
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: contextId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/scanAsUser/:
    get:
      tags:
      - ascan
      description: Active Scans from the perspective of a User, obtained using the
        given Context ID and User ID. See 'scan' action for more details.
      operationId: ascanActionScanAsUser
      parameters:
      - name: url
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: contextId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: userId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: recurse
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: method
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: postData
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/pause/:
    get:
      tags:
      - ascan
      operationId: ascanActionPause
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/resume/:
    get:
      tags:
      - ascan
      operationId: ascanActionResume
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/stop/:
    get:
      tags:
      - ascan
      operationId: ascanActionStop
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/removeScan/:
    get:
      tags:
      - ascan
      operationId: ascanActionRemoveScan
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/pauseAllScans/:
    get:
      tags:
      - ascan
      operationId: ascanActionPauseAllScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/resumeAllScans/:
    get:
      tags:
      - ascan
      operationId: ascanActionResumeAllScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/stopAllScans/:
    get:
      tags:
      - ascan
      operationId: ascanActionStopAllScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/removeAllScans/:
    get:
      tags:
      - ascan
      operationId: ascanActionRemoveAllScans
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/clearExcludedFromScan/:
    get:
      tags:
      - ascan
      description: Clears the regexes of URLs excluded from the active scans.
      operationId: ascanActionClearExcludedFromScan
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/excludeFromScan/:
    get:
      tags:
      - ascan
      description: Adds a regex of URLs that should be excluded from the active scans.
      operationId: ascanActionExcludeFromScan
      parameters:
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/enableAllScanners/:
    get:
      tags:
      - ascan
      description: Enables all scanners of the scan policy with the given name, or
        the default if none given.
      operationId: ascanActionEnableAllScanners
      parameters:
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/disableAllScanners/:
    get:
      tags:
      - ascan
      description: Disables all scanners of the scan policy with the given name, or
        the default if none given.
      operationId: ascanActionDisableAllScanners
      parameters:
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/enableScanners/:
    get:
      tags:
      - ascan
      description: Enables the scanners with the given IDs (comma separated list of
        IDs) of the scan policy with the given name, or the default if none given.
      operationId: ascanActionEnableScanners
      parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/disableScanners/:
    get:
      tags:
      - ascan
      description: Disables the scanners with the given IDs (comma separated list
        of IDs) of the scan policy with the given name, or the default if none given.
      operationId: ascanActionDisableScanners
      parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setEnabledPolicies/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetEnabledPolicies
      parameters:
      - name: ids
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setPolicyAttackStrength/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetPolicyAttackStrength
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: attackStrength
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setPolicyAlertThreshold/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetPolicyAlertThreshold
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: alertThreshold
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setScannerAttackStrength/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetScannerAttackStrength
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: attackStrength
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setScannerAlertThreshold/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetScannerAlertThreshold
      parameters:
      - name: id
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: alertThreshold
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scanPolicyName
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/addScanPolicy/:
    get:
      tags:
      - ascan
      operationId: ascanActionAddScanPolicy
      parameters:
      - name: scanPolicyName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: alertThreshold
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: attackStrength
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/removeScanPolicy/:
    get:
      tags:
      - ascan
      operationId: ascanActionRemoveScanPolicy
      parameters:
      - name: scanPolicyName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/updateScanPolicy/:
    get:
      tags:
      - ascan
      operationId: ascanActionUpdateScanPolicy
      parameters:
      - name: scanPolicyName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: alertThreshold
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: attackStrength
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/importScanPolicy/:
    get:
      tags:
      - ascan
      description: Imports a Scan Policy using the given file system path.
      operationId: ascanActionImportScanPolicy
      parameters:
      - name: path
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/addExcludedParam/:
    get:
      tags:
      - ascan
      description: Adds a new parameter excluded from the scan, using the specified
        name. Optionally sets if the new entry applies to a specific URL (default,
        all URLs) and sets the ID of the type of the parameter (default, ID of any
        type). The type IDs can be obtained with the view excludedParamTypes.
      operationId: ascanActionAddExcludedParam
      parameters:
      - name: name
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/modifyExcludedParam/:
    get:
      tags:
      - ascan
      description: Modifies a parameter excluded from the scan. Allows to modify the
        name, the URL and the type of parameter. The parameter is selected with its
        index, which can be obtained with the view excludedParams.
      operationId: ascanActionModifyExcludedParam
      parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: name
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/removeExcludedParam/:
    get:
      tags:
      - ascan
      description: Removes a parameter excluded from the scan, with the given index.
        The index can be obtained with the view excludedParams.
      operationId: ascanActionRemoveExcludedParam
      parameters:
      - name: idx
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/skipScanner/:
    get:
      tags:
      - ascan
      description: Skips the scanner using the given IDs of the scan and the scanner.
      operationId: ascanActionSkipScanner
      parameters:
      - name: scanId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: scannerId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionAttackPolicy/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionAttackPolicy
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionDefaultPolicy/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionDefaultPolicy
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionAddQueryParam/:
    get:
      tags:
      - ascan
      description: Sets whether or not the active scanner should add a query param
        to GET requests which do not have parameters to start with.
      operationId: ascanActionSetOptionAddQueryParam
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionAllowAttackOnStart/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionAllowAttackOnStart
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionDelayInMs/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionDelayInMs
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionHandleAntiCSRFTokens/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionHandleAntiCSRFTokens
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionHostPerScan/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionHostPerScan
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionInjectPluginIdInHeader/:
    get:
      tags:
      - ascan
      description: Sets whether or not the active scanner should inject the HTTP request
        header X-ZAP-Scan-ID, with the ID of the scanner that's sending the requests.
      operationId: ascanActionSetOptionInjectPluginIdInHeader
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionMaxChartTimeInMins/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionMaxChartTimeInMins
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionMaxResultsToList/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionMaxResultsToList
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionMaxRuleDurationInMins/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionMaxRuleDurationInMins
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionMaxScanDurationInMins/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionMaxScanDurationInMins
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionMaxScansInUI/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionMaxScansInUI
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionPromptInAttackMode/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionPromptInAttackMode
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionPromptToClearFinishedScans/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionPromptToClearFinishedScans
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionRescanInAttackMode/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionRescanInAttackMode
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionScanHeadersAllRequests/:
    get:
      tags:
      - ascan
      description: Sets whether or not the HTTP Headers of all requests should be
        scanned. Not just requests that send parameters, through the query or request
        body.
      operationId: ascanActionSetOptionScanHeadersAllRequests
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionShowAdvancedDialog/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionShowAdvancedDialog
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionTargetParamsEnabledRPC/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionTargetParamsEnabledRPC
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionTargetParamsInjectable/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionTargetParamsInjectable
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ascan/action/setOptionThreadPerHost/:
    get:
      tags:
      - ascan
      operationId: ascanActionSetOptionThreadPerHost
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/view/contextList/:
    get:
      tags:
      - context
      description: List context names of current session
      operationId: contextViewContextList
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/view/excludeRegexs/:
    get:
      tags:
      - context
      description: List excluded regexs for context
      operationId: contextViewExcludeRegexs
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/view/includeRegexs/:
    get:
      tags:
      - context
      description: List included regexs for context
      operationId: contextViewIncludeRegexs
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/view/context/:
    get:
      tags:
      - context
      description: List the information about the named context
      operationId: contextViewContext
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/view/technologyList/:
    get:
      tags:
      - context
      description: Lists the names of all built in technologies
      operationId: contextViewTechnologyList
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/view/includedTechnologyList/:
    get:
      tags:
      - context
      description: Lists the names of all technologies included in a context
      operationId: contextViewIncludedTechnologyList
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/view/excludedTechnologyList/:
    get:
      tags:
      - context
      description: Lists the names of all technologies excluded from a context
      operationId: contextViewExcludedTechnologyList
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/view/urls/:
    get:
      tags:
      - context
      description: Lists the URLs accessed through/by ZAP, that belong to the context
        with the given name.
      operationId: contextViewUrls
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/excludeFromContext/:
    get:
      tags:
      - context
      description: Add exclude regex to context
      operationId: contextActionExcludeFromContext
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/includeInContext/:
    get:
      tags:
      - context
      description: Add include regex to context
      operationId: contextActionIncludeInContext
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: regex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/setContextRegexs/:
    get:
      tags:
      - context
      description: Set the regexs to include and exclude for a context, both supplied
        as JSON string arrays
      operationId: contextActionSetContextRegexs
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: incRegexs
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: excRegexs
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/newContext/:
    get:
      tags:
      - context
      description: Creates a new context with the given name in the current session
      operationId: contextActionNewContext
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/removeContext/:
    get:
      tags:
      - context
      description: Removes a context in the current session
      operationId: contextActionRemoveContext
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/exportContext/:
    get:
      tags:
      - context
      description: Exports the context with the given name to a file. If a relative
        file path is specified it will be resolved against the "contexts" directory
        in ZAP "home" dir.
      operationId: contextActionExportContext
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: contextFile
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/importContext/:
    get:
      tags:
      - context
      description: Imports a context from a file. If a relative file path is specified
        it will be resolved against the "contexts" directory in ZAP "home" dir.
      operationId: contextActionImportContext
      parameters:
      - name: contextFile
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/includeContextTechnologies/:
    get:
      tags:
      - context
      description: Includes technologies with the given names, separated by a comma,
        to a context
      operationId: contextActionIncludeContextTechnologies
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: technologyNames
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/includeAllContextTechnologies/:
    get:
      tags:
      - context
      description: Includes all built in technologies in to a context
      operationId: contextActionIncludeAllContextTechnologies
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/excludeContextTechnologies/:
    get:
      tags:
      - context
      description: Excludes technologies with the given names, separated by a comma,
        from a context
      operationId: contextActionExcludeContextTechnologies
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: technologyNames
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/excludeAllContextTechnologies/:
    get:
      tags:
      - context
      description: Excludes all built in technologies from a context
      operationId: contextActionExcludeAllContextTechnologies
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/context/action/setContextInScope/:
    get:
      tags:
      - context
      description: Sets a context to in scope (contexts are in scope by default)
      operationId: contextActionSetContextInScope
      parameters:
      - name: contextName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: booleanInScope
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/view/sites/:
    get:
      tags:
      - httpSessions
      description: Gets all of the sites that have sessions.
      operationId: httpSessionsViewSites
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/view/sessions/:
    get:
      tags:
      - httpSessions
      description: Gets the sessions for the given site. Optionally returning just
        the session with the given name.
      operationId: httpSessionsViewSessions
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: session
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/view/activeSession/:
    get:
      tags:
      - httpSessions
      description: Gets the name of the active session for the given site.
      operationId: httpSessionsViewActiveSession
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/view/sessionTokens/:
    get:
      tags:
      - httpSessions
      description: Gets the names of the session tokens for the given site.
      operationId: httpSessionsViewSessionTokens
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/view/defaultSessionTokens/:
    get:
      tags:
      - httpSessions
      description: Gets the default session tokens.
      operationId: httpSessionsViewDefaultSessionTokens
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/createEmptySession/:
    get:
      tags:
      - httpSessions
      description: Creates an empty session for the given site. Optionally with the
        given name.
      operationId: httpSessionsActionCreateEmptySession
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: session
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/removeSession/:
    get:
      tags:
      - httpSessions
      description: Removes the session from the given site.
      operationId: httpSessionsActionRemoveSession
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: session
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/setActiveSession/:
    get:
      tags:
      - httpSessions
      description: Sets the given session as active for the given site.
      operationId: httpSessionsActionSetActiveSession
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: session
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/unsetActiveSession/:
    get:
      tags:
      - httpSessions
      description: Unsets the active session of the given site.
      operationId: httpSessionsActionUnsetActiveSession
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/addSessionToken/:
    get:
      tags:
      - httpSessions
      description: Adds the session token to the given site.
      operationId: httpSessionsActionAddSessionToken
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/removeSessionToken/:
    get:
      tags:
      - httpSessions
      description: Removes the session token from the given site.
      operationId: httpSessionsActionRemoveSessionToken
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/setSessionTokenValue/:
    get:
      tags:
      - httpSessions
      description: Sets the value of the session token of the given session for the
        given site.
      operationId: httpSessionsActionSetSessionTokenValue
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: session
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: tokenValue
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/renameSession/:
    get:
      tags:
      - httpSessions
      description: Renames the session of the given site.
      operationId: httpSessionsActionRenameSession
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: oldSessionName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: newSessionName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/addDefaultSessionToken/:
    get:
      tags:
      - httpSessions
      description: Adds a default session token with the given name and enabled state.
      operationId: httpSessionsActionAddDefaultSessionToken
      parameters:
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: tokenEnabled
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/setDefaultSessionTokenEnabled/:
    get:
      tags:
      - httpSessions
      description: Sets whether or not the default session token with the given name
        is enabled.
      operationId: httpSessionsActionSetDefaultSessionTokenEnabled
      parameters:
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: tokenEnabled
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/httpSessions/action/removeDefaultSessionToken/:
    get:
      tags:
      - httpSessions
      description: Removes the default session token with the given name.
      operationId: httpSessionsActionRemoveDefaultSessionToken
      parameters:
      - name: sessionToken
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/view/isBreakAll/:
    get:
      tags:
      - break
      description: Returns True if ZAP will break on both requests and responses
      operationId: breakViewIsBreakAll
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/view/isBreakRequest/:
    get:
      tags:
      - break
      description: Returns True if ZAP will break on requests
      operationId: breakViewIsBreakRequest
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/view/isBreakResponse/:
    get:
      tags:
      - break
      description: Returns True if ZAP will break on responses
      operationId: breakViewIsBreakResponse
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/view/httpMessage/:
    get:
      tags:
      - break
      description: Returns the HTTP message currently intercepted (if any)
      operationId: breakViewHttpMessage
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/action/break/:
    get:
      tags:
      - break
      description: 'Controls the global break functionality. The type may be one of:
        http-all, http-request or http-response. The state may be true (for turning
        break on for the specified type) or false (for turning break off). Scope is
        not currently used.'
      operationId: breakActionBreak
      parameters:
      - name: type
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scope
        in: query
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/action/setHttpMessage/:
    get:
      tags:
      - break
      description: Overwrites the currently intercepted message with the data provided
      operationId: breakActionSetHttpMessage
      parameters:
      - name: httpHeader
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: httpBody
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/action/continue/:
    get:
      tags:
      - break
      description: Submits the currently intercepted message and unsets the global
        request/response break points
      operationId: breakActionContinue
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/action/step/:
    get:
      tags:
      - break
      description: Submits the currently intercepted message, the next request or
        response will automatically be intercepted
      operationId: breakActionStep
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/action/drop/:
    get:
      tags:
      - break
      description: Drops the currently intercepted message
      operationId: breakActionDrop
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/action/addHttpBreakpoint/:
    get:
      tags:
      - break
      description: 'Adds a custom HTTP breakpoint. The string is the string to match.
        Location may be one of: url, request_header, request_body, response_header
        or response_body. Match may be: contains or regex. Inverse (match) may be
        true or false. Lastly, ignorecase (when matching the string) may be true or
        false.'
      operationId: breakActionAddHttpBreakpoint
      parameters:
      - name: string
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: match
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: inverse
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ignorecase
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/break/action/removeHttpBreakpoint/:
    get:
      tags:
      - break
      description: Removes the specified break point
      operationId: breakActionRemoveHttpBreakpoint
      parameters:
      - name: string
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: match
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: inverse
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ignorecase
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authentication/view/getSupportedAuthenticationMethods/:
    get:
      tags:
      - authentication
      description: Gets the name of the authentication methods.
      operationId: authenticationViewGetSupportedAuthenticationMethods
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authentication/view/getAuthenticationMethodConfigParams/:
    get:
      tags:
      - authentication
      description: Gets the configuration parameters for the authentication method
        with the given name.
      operationId: authenticationViewGetAuthenticationMethodConfigParams
      parameters:
      - name: authMethodName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authentication/view/getAuthenticationMethod/:
    get:
      tags:
      - authentication
      description: Gets the name of the authentication method for the context with
        the given ID.
      operationId: authenticationViewGetAuthenticationMethod
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authentication/view/getLoggedInIndicator/:
    get:
      tags:
      - authentication
      description: Gets the logged in indicator for the context with the given ID.
      operationId: authenticationViewGetLoggedInIndicator
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authentication/view/getLoggedOutIndicator/:
    get:
      tags:
      - authentication
      description: Gets the logged out indicator for the context with the given ID.
      operationId: authenticationViewGetLoggedOutIndicator
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authentication/action/setAuthenticationMethod/:
    get:
      tags:
      - authentication
      description: Sets the authentication method for the context with the given ID.
      operationId: authenticationActionSetAuthenticationMethod
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: authMethodName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: authMethodConfigParams
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authentication/action/setLoggedInIndicator/:
    get:
      tags:
      - authentication
      description: Sets the logged in indicator for the context with the given ID.
      operationId: authenticationActionSetLoggedInIndicator
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: loggedInIndicatorRegex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authentication/action/setLoggedOutIndicator/:
    get:
      tags:
      - authentication
      description: Sets the logged out indicator for the context with the given ID.
      operationId: authenticationActionSetLoggedOutIndicator
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: loggedOutIndicatorRegex
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authorization/view/getAuthorizationDetectionMethod/:
    get:
      tags:
      - authorization
      description: Obtains all the configuration of the authorization detection method
        that is currently set for a context.
      operationId: authorizationViewGetAuthorizationDetectionMethod
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/authorization/action/setBasicAuthorizationDetectionMethod/:
    get:
      tags:
      - authorization
      description: 'Sets the authorization detection method for a context as one that
        identifies un-authorized messages based on: the message''s status code or
        a regex pattern in the response''s header or body. Also, whether all conditions
        must match or just some can be specified via the logicalOperator parameter,
        which accepts two values: "AND" (default), "OR".'
      operationId: authorizationActionSetBasicAuthorizationDetectionMethod
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: headerRegex
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: bodyRegex
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: statusCode
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: logicalOperator
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/localProxies/view/additionalProxies/:
    get:
      tags:
      - localProxies
      description: Gets all of the additional proxies that have been configured.
      operationId: localProxiesViewAdditionalProxies
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/localProxies/action/addAdditionalProxy/:
    get:
      tags:
      - localProxies
      description: Adds an new proxy using the details supplied.
      operationId: localProxiesActionAddAdditionalProxy
      parameters:
      - name: address
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: port
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: behindNat
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: alwaysDecodeZip
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: removeUnsupportedEncodings
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/localProxies/action/removeAdditionalProxy/:
    get:
      tags:
      - localProxies
      description: Removes the additional proxy with the specified address and port.
      operationId: localProxiesActionRemoveAdditionalProxy
      parameters:
      - name: address
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: port
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ruleConfig/view/ruleConfigValue/:
    get:
      tags:
      - ruleConfig
      description: Show the specified rule configuration
      operationId: ruleConfigViewRuleConfigValue
      parameters:
      - name: key
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ruleConfig/view/allRuleConfigs/:
    get:
      tags:
      - ruleConfig
      description: Show all of the rule configurations
      operationId: ruleConfigViewAllRuleConfigs
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ruleConfig/action/resetRuleConfigValue/:
    get:
      tags:
      - ruleConfig
      description: Reset the specified rule configuration, which must already exist
      operationId: ruleConfigActionResetRuleConfigValue
      parameters:
      - name: key
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ruleConfig/action/resetAllRuleConfigValues/:
    get:
      tags:
      - ruleConfig
      description: Reset all of the rule configurations
      operationId: ruleConfigActionResetAllRuleConfigValues
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/ruleConfig/action/setRuleConfigValue/:
    get:
      tags:
      - ruleConfig
      description: Set the specified rule configuration, which must already exist
      operationId: ruleConfigActionSetRuleConfigValue
      parameters:
      - name: key
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: value
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/sessionManagement/view/getSupportedSessionManagementMethods/:
    get:
      tags:
      - sessionManagement
      description: Gets the name of the session management methods.
      operationId: sessionManagementViewGetSupportedSessionManagementMethods
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/sessionManagement/view/getSessionManagementMethodConfigParams/:
    get:
      tags:
      - sessionManagement
      description: Gets the configuration parameters for the session management method
        with the given name.
      operationId: sessionManagementViewGetSessionManagementMethodConfigParams
      parameters:
      - name: methodName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/sessionManagement/view/getSessionManagementMethod/:
    get:
      tags:
      - sessionManagement
      description: Gets the name of the session management method for the context
        with the given ID.
      operationId: sessionManagementViewGetSessionManagementMethod
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/sessionManagement/action/setSessionManagementMethod/:
    get:
      tags:
      - sessionManagement
      description: Sets the session management method for the context with the given
        ID.
      operationId: sessionManagementActionSetSessionManagementMethod
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: methodName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: methodConfigParams
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/users/view/usersList/:
    get:
      tags:
      - users
      description: Gets a list of users that belong to the context with the given
        ID, or all users if none provided.
      operationId: usersViewUsersList
      parameters:
      - name: contextId
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/users/view/getUserById/:
    get:
      tags:
      - users
      description: Gets the data of the user with the given ID that belongs to the
        context with the given ID.
      operationId: usersViewGetUserById
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/users/view/getAuthenticationCredentialsConfigParams/:
    get:
      tags:
      - users
      description: Gets the configuration parameters for the credentials of the context
        with the given ID.
      operationId: usersViewGetAuthenticationCredentialsConfigParams
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/users/view/getAuthenticationCredentials/:
    get:
      tags:
      - users
      description: Gets the authentication credentials of the user with given ID that
        belongs to the context with the given ID.
      operationId: usersViewGetAuthenticationCredentials
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/users/action/newUser/:
    get:
      tags:
      - users
      description: Creates a new user with the given name for the context with the
        given ID.
      operationId: usersActionNewUser
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: name
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/users/action/removeUser/:
    get:
      tags:
      - users
      description: Removes the user with the given ID that belongs to the context
        with the given ID.
      operationId: usersActionRemoveUser
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/users/action/setUserEnabled/:
    get:
      tags:
      - users
      description: Sets whether or not the user, with the given ID that belongs to
        the context with the given ID, should be enabled.
      operationId: usersActionSetUserEnabled
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: enabled
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/users/action/setUserName/:
    get:
      tags:
      - users
      description: Renames the user with the given ID that belongs to the context
        with the given ID.
      operationId: usersActionSetUserName
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: name
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/users/action/setAuthenticationCredentials/:
    get:
      tags:
      - users
      description: Sets the authentication credentials for the user with the given
        ID that belongs to the context with the given ID.
      operationId: usersActionSetAuthenticationCredentials
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: authCredentialsConfigParams
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/forcedUser/view/isForcedUserModeEnabled/:
    get:
      tags:
      - forcedUser
      description: Returns 'true' if 'forced user' mode is enabled, 'false' otherwise
      operationId: forcedUserViewIsForcedUserModeEnabled
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/forcedUser/view/getForcedUser/:
    get:
      tags:
      - forcedUser
      description: Gets the user (ID) set as 'forced user' for the given context (ID)
      operationId: forcedUserViewGetForcedUser
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/forcedUser/action/setForcedUser/:
    get:
      tags:
      - forcedUser
      description: Sets the user (ID) that should be used in 'forced user' mode for
        the given context (ID)
      operationId: forcedUserActionSetForcedUser
      parameters:
      - name: contextId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      - name: userId
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/forcedUser/action/setForcedUserModeEnabled/:
    get:
      tags:
      - forcedUser
      description: Sets if 'forced user' mode should be enabled or not
      operationId: forcedUserActionSetForcedUserModeEnabled
      parameters:
      - name: boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/view/listEngines/:
    get:
      tags:
      - script
      description: Lists the script engines available
      operationId: scriptViewListEngines
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/view/listTypes/:
    get:
      tags:
      - script
      description: Lists the script types available.
      operationId: scriptViewListTypes
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/view/listScripts/:
    get:
      tags:
      - script
      description: Lists the scripts available, with its engine, name, description,
        type and error state.
      operationId: scriptViewListScripts
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/view/globalVar/:
    get:
      tags:
      - script
      description: Gets the value of the global variable with the given key. Returns
        an API error (DOES_NOT_EXIST) if no value was previously set.
      operationId: scriptViewGlobalVar
      parameters:
      - name: varKey
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/view/globalVars/:
    get:
      tags:
      - script
      description: Gets all the global variables (key/value pairs).
      operationId: scriptViewGlobalVars
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/view/scriptVar/:
    get:
      tags:
      - script
      description: Gets the value of the variable with the given key for the given
        script. Returns an API error (DOES_NOT_EXIST) if no script with the given
        name exists or if no value was previously set.
      operationId: scriptViewScriptVar
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: varKey
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/view/scriptVars/:
    get:
      tags:
      - script
      description: Gets all the variables (key/value pairs) of the given script. Returns
        an API error (DOES_NOT_EXIST) if no script with the given name exists.
      operationId: scriptViewScriptVars
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/enable/:
    get:
      tags:
      - script
      description: Enables the script with the given name
      operationId: scriptActionEnable
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/disable/:
    get:
      tags:
      - script
      description: Disables the script with the given name
      operationId: scriptActionDisable
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/load/:
    get:
      tags:
      - script
      description: Loads a script into ZAP from the given local file, with the given
        name, type and engine, optionally with a description, and a charset name to
        read the script (the charset name is required if the script is not in UTF-8,
        for example, in ISO-8859-1).
      operationId: scriptActionLoad
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scriptType
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scriptEngine
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: fileName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: scriptDescription
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: charset
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
          default: UTF-8
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/remove/:
    get:
      tags:
      - script
      description: Removes the script with the given name
      operationId: scriptActionRemove
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/runStandAloneScript/:
    get:
      tags:
      - script
      description: Runs the stand alone script with the given name
      operationId: scriptActionRunStandAloneScript
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/clearGlobalVar/:
    get:
      tags:
      - script
      description: Clears the global variable with the given key.
      operationId: scriptActionClearGlobalVar
      parameters:
      - name: varKey
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/clearGlobalVars/:
    get:
      tags:
      - script
      description: Clears the global variables.
      operationId: scriptActionClearGlobalVars
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/clearScriptVar/:
    get:
      tags:
      - script
      description: Clears the variable with the given key of the given script. Returns
        an API error (DOES_NOT_EXIST) if no script with the given name exists.
      operationId: scriptActionClearScriptVar
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: varKey
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/clearScriptVars/:
    get:
      tags:
      - script
      description: Clears the variables of the given script. Returns an API error
        (DOES_NOT_EXIST) if no script with the given name exists.
      operationId: scriptActionClearScriptVars
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/setScriptVar/:
    get:
      tags:
      - script
      description: Sets the value of the variable with the given key of the given
        script. Returns an API error (DOES_NOT_EXIST) if no script with the given
        name exists.
      operationId: scriptActionSetScriptVar
      parameters:
      - name: scriptName
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: varKey
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: varValue
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/script/action/setGlobalVar/:
    get:
      tags:
      - script
      description: Sets the value of the global variable with the given key.
      operationId: scriptActionSetGlobalVar
      parameters:
      - name: varKey
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: varValue
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/view/stats/:
    get:
      tags:
      - stats
      description: Statistics
      operationId: statsViewStats
      parameters:
      - name: keyPrefix
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/view/allSitesStats/:
    get:
      tags:
      - stats
      description: Gets all of the site based statistics, optionally filtered by a
        key prefix
      operationId: statsViewAllSitesStats
      parameters:
      - name: keyPrefix
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/view/siteStats/:
    get:
      tags:
      - stats
      description: Gets all of the global statistics, optionally filtered by a key
        prefix
      operationId: statsViewSiteStats
      parameters:
      - name: site
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: keyPrefix
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/view/optionStatsdHost/:
    get:
      tags:
      - stats
      description: Gets the Statsd service hostname
      operationId: statsViewOptionStatsdHost
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/view/optionStatsdPort/:
    get:
      tags:
      - stats
      description: Gets the Statsd service port
      operationId: statsViewOptionStatsdPort
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/view/optionStatsdPrefix/:
    get:
      tags:
      - stats
      description: Gets the prefix to be applied to all stats sent to the configured
        Statsd service
      operationId: statsViewOptionStatsdPrefix
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/view/optionInMemoryEnabled/:
    get:
      tags:
      - stats
      description: Returns 'true' if in memory statistics are enabled, otherwise returns
        'false'
      operationId: statsViewOptionInMemoryEnabled
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/view/optionStatsdEnabled/:
    get:
      tags:
      - stats
      description: Returns 'true' if a Statsd server has been correctly configured,
        otherwise returns 'false'
      operationId: statsViewOptionStatsdEnabled
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/action/clearStats/:
    get:
      tags:
      - stats
      description: Clears all of the statistics
      operationId: statsActionClearStats
      parameters:
      - name: keyPrefix
        in: query
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/action/setOptionStatsdHost/:
    get:
      tags:
      - stats
      description: Sets the Statsd service hostname, supply an empty string to stop
        using a Statsd service
      operationId: statsActionSetOptionStatsdHost
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/action/setOptionStatsdPrefix/:
    get:
      tags:
      - stats
      description: Sets the prefix to be applied to all stats sent to the configured
        Statsd service
      operationId: statsActionSetOptionStatsdPrefix
      parameters:
      - name: String
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/action/setOptionInMemoryEnabled/:
    get:
      tags:
      - stats
      description: Sets whether in memory statistics are enabled
      operationId: statsActionSetOptionInMemoryEnabled
      parameters:
      - name: Boolean
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /JSON/stats/action/setOptionStatsdPort/:
    get:
      tags:
      - stats
      description: Sets the Statsd service port
      operationId: statsActionSetOptionStatsdPort
      parameters:
      - name: Integer
        in: query
        required: true
        deprecated: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      required:
      - code
      - message
      type: object
      properties:
        message:
          type: string
        code:
          maximum: 600
          minimum: 100
          type: integer
      example:
        code: 140
        message: message
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: X-ZAP-API-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: apikey
      in: query
